"""
PCL 1 Fall Semester 2023 - Course Project
Part 0: Book Selection
Students: <person 1>, <person 2>
"""
# --- Imports ---
import os
import re
import json
import spacy
import nltk
# --- You may add other imports here ---
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

# Feel free to add more functions as needed!


# Function to perform sentiment analysis
def analyze_sentiment(text):
    # TODO: Apply the sentiment analysis tool to the text and return the results
    analyzer = SentimentIntensityAnalyzer()
    sentiment_score = analyzer.polarity_scores(text)['compound']
    return sentiment_score


# Function to save sentiment analysis results to a JSON file
def save_sentiment_results(results, filename):
    # TODO: Save the sentiment analysis results in a structured JSON format
    names ={}
    
    with open(filename, 'w', encoding='utf-8') as json_file:
        json.dump(results, json_file, ensure_ascii=False, indent=4)


# Main function
def main():
    """
    1) load the book file
    2) perform the analysis
    3) save it in a json file
    """
    # TODO: Load or define the text for analysis
    file_name = input("Pls enter the file name (incl. the '.txt'): ")
    folder_path = os.getcwd()
    file_path = os.path.join(folder_path, file_name)
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            text = f.read()
    except:
        print("Please make sure you entered the correct file name!")
        exit(1)

    # TODO: Perform sentiment analysis on the text using your chosen tool
    # For example, analyze each sentence or paragraph where entities are identified
    nlp = spacy.load("en_core_web_sm")
    sentiments = analyze_sentiment(text)

    # Save the results to a JSON file
    # Example filename: 'BookTitle_Sentiment.json'
    save_sentiment_results(sentiments, file_name+'.json')


# Run the main function
if __name__ == "__main__":
    main()
